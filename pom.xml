<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>test.sdc</groupId>
    <artifactId>basic-unit-tests</artifactId>
    <packaging>jar</packaging>
    <version>01.00.00-SNAPSHOT</version>

    <properties>
        <!-- Java compilation configuration -->
        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>

        <!-- Encoding -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Jacoco/SonarQube integration configuration -->
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-reports/jacoco-it.exec</sonar.jacoco.itReportPath>
        <sonar.jacoco.reportPath>${project.basedir}/target/jacoco-reports/jacoco.exec</sonar.jacoco.reportPath>
        <!-- No coverage report means 0% coverage -->
        <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>

        <!-- Third-party dependency versions -->
        <junit.version>4.13.1</junit.version> <!-- JUnit4 legacy -->
        <junit.jupiter.version>5.0.2</junit.jupiter.version>
        <junit.platform.version>1.0.2</junit.platform.version>
        <junit.vintage.version>4.12.2</junit.vintage.version> <!-- JUnit4 legacy -->
        <mockito.version>2.12.0</mockito.version>
        <junitparams.version>1.1.1</junitparams.version>
        <assertj.version>3.8.0</assertj.version>
        <assertj-guava.version>3.1.0</assertj-guava.version>
        <jsonassert.version>1.5.0</jsonassert.version>
        <jgiven.version>0.15.3</jgiven.version>
        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <guava.version>29.0-jre</guava.version>

        <!-- Maven plug-in versions -->
        <maven-surefire-plugin.version>2.19.1
        </maven-surefire-plugin.version> <!-- Due to a memory leak in Surefire 2.20, the junit-platform-surefire-provider currently only works with Surefire 2.19.1 -->
        <maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>
        <pitest-maven-plugin.version>1.2.4</pitest-maven-plugin.version>
        <pitest-junit5-plugin.version>0.2</pitest-junit5-plugin.version>
    </properties>

    <dependencies>
        <!-- Tests -->
        <dependency>
            <!-- JUnit4 legacy -->
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- JUnit4 legacy -->
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <version>${junit.vintage.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>pl.pragmatists</groupId>
            <artifactId>JUnitParams</artifactId>
            <version>${junitparams.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-guava</artifactId>
            <version>${assertj-guava.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
            <version>${jsonassert.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.jgiven</groupId>
            <artifactId>jgiven-junit</artifactId>
            <version>${jgiven.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Logger -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
            </plugin>
            <plugin>
                <groupId>com.tngtech.jgiven</groupId>
                <artifactId>jgiven-maven-plugin</artifactId>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!-- Unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit.platform.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <!-- Excludes integration tests when unit tests are run. -->
                        <excludes> <!-- Comment to support Jupiter integration tests (@Tag) -->
                            <exclude>**/*IT.java</exclude>
                        </excludes>
                        <!-- <properties> Uncomment to support Jupiter integration tests (@Tag)
                            <excludeTags>integration</excludeTags>
                        </properties> -->
                        <!-- Sets the VM argument line used when integration tests are run. -->
                        <argLine>${jacoco.agent.argLine}</argLine>
                    </configuration>
                </plugin>
                <!-- Integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit.platform.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <includes>
                            <!-- Uncomment to support Jupiter integration tests (@Tag)
                            <include>**/*Test.java</include>  -->
                            <include>**/*IT.java</include> <!-- Remove to support Jupiter integration tests (@Tag) -->
                        </includes>
                        <!-- <properties> Uncomment to support Jupiter integration tests (@Tag)
                            <includeTags>integration</includeTags>
                        </properties> -->
                        <!-- Sets the VM argument line used when integration tests are run. -->
                        <argLine>${jacoco.agent.argLine-it}</argLine>
                    </configuration>
                    <executions>
                        <!-- Ensures that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <!-- Jacoco (code coverage) plugin -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <executions>
                        <!-- Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Surefire plugin is executed. -->
                        <execution>
                            <id>pre-unit-test</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${sonar.jacoco.reportPath}</destFile>
                                <!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
                                <propertyName>jacoco.agent.argLine</propertyName>
                            </configuration>
                        </execution>
                        <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                        <!-- Prepares the property pointing to the JaCoCo runtime agent which
                            is passed as VM argument when Maven the Failsafe plugin is executed. -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <destFile>${sonar.jacoco.itReportPath}</destFile>
                                <!-- Sets the name of the property containing the settings for JaCoCo
                                    runtime agent. -->
                                <propertyName>jacoco.agent.argLine-it</propertyName>
                            </configuration>
                        </execution>
                        <!-- Ensures that the code coverage report for integration tests is
                            created after integration tests have been run. -->
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <!-- Sets the path to the file which contains the execution data. -->
                                <dataFile>${sonar.jacoco.reportPath-it}</dataFile>
                                <!-- Sets the output directory for the code coverage report. -->
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- PIT (mutation testing) reports -->
                <plugin>
                    <groupId>org.pitest</groupId>
                    <artifactId>pitest-maven</artifactId>
                    <version>${pitest-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>mutationCoverage</goal>
                            </goals>
                            <configuration>
                                <excludedClasses>
                                    <param>*.*IT</param>
                                </excludedClasses>
                            </configuration>
                        </execution>
                    </executions>
                    <dependencies>
                        <!-- If this plugin is activated, JUnit4 tests are not taken into account! -->
                        <dependency>
                            <groupId>org.pitest</groupId>
                            <artifactId>pitest-junit5-plugin</artifactId>
                            <version>${pitest-junit5-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <targetClasses>
                            <param>test.sdc.*</param>
                        </targetClasses>
                        <outputFormats>
                            <outputFormat>XML</outputFormat>
                            <outputFormat>HTML</outputFormat>
                        </outputFormats>
                        <verbose>true</verbose>
                    </configuration>
                </plugin>
                <!-- BDD tests -->
                <plugin>
                    <groupId>com.tngtech.jgiven</groupId>
                    <artifactId>jgiven-maven-plugin</artifactId>
                    <version>${jgiven.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <format>html</format>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>